<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.hsgene</groupId>
  <artifactId>item-ssm</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>item-ssm Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <!-- hamcrest-core包是junit的依赖包 -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- jetty:run服务器插件依赖 -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.3.7.v20160115</version>
        <configuration>
          <httpConnector>
            <port>81</port>
          </httpConnector>
          <webAppConfig>
            <contextPath>/</contextPath>
          </webAppConfig>
          <systemProperties>
            <systemProperty>
              <name>org.mortbay.util.URI.charset</name>
              <value>UTF-8</value>
            </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>
    </plugins>
    <!--  编译部署文件名需要与artifact中out directory一致  -->
    <finalName>item-ssm</finalName>
    <!-- 编译需要指定编译源文件和编译输出目标目录，这里指定编译源文件 -->
    <!-- 配置需编译文件目录，浏览器访问时的都是编译后的文件，所以如果访问的文件没有编译则会找不到资源 -->
    <!-- 编译后的项目根目录是classes，在jetty:run中的项目访问时url一般都不需要项目名 -->
    <resources>
      <resource>
        <directory>src/main/java</directory>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>src/main/webapp</directory>
      </resource>
    </resources>
  </build>
</project>
