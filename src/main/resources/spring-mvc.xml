<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 容器扫描@Controller注解的类来处理请求，base-package如果多个用“,”分隔，该方式基于DefaultAnnotationHandlerMapping类 -->
    <context:component-scan base-package="com.hsgene">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 开启MVC注解映射 -->
    <mvc:annotation-driven/>

    <!-- 配置视图解析器，最常用解析器 ,解析ModelAndView对象返回的逻辑视图名，根据这里配置的前缀和后缀对匹配的视图进行解析 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 逻辑视图名所对应的页面不在jsp下面，那么可以使用../来访问上层目录，默认当前目录就是jsp -->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 对静态资源文件(html、js、css、image等，jsp不是静态资源)的访问映射类，由于DispatcherServlet会拦截所有请求包括静态文件请求 -->
    <!-- 如果没有没有配置defaultServlet，那么请求只会由HandlerMapping来映射一些Controller中的url和动态资源url，配置defaultServlet后就可以用于映射静态资源 -->
    <mvc:default-servlet-handler/>

    <!-- 第二种映射静态资源文件方法，/statics/下的请求映射到/statics/**所有的文件包括子文件（*不包含子文件，**包含子文件） -->
    <!-- 二选一，该种方法可以映射指定目录下的静态资源，并且还可以指定缓存静态资源时间，31536000是1年 -->
    <mvc:resources mapping="/statics/**" location="classpath:statics" cache-period="31536000"/>

    <!-- 配置处理全局异常类，需要关闭局部异常注解@HandlerException，否则局部异常优先 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- exceptionMappings属性是Properties类型，即K-V键值对，抛出特定异常就跳到特定页面 -->
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Throwable">../error</prop>
            </props>
        </property>
    </bean>

    <!-- 文件上传配置类，用于解析接收文件类型 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置上传文件最大大小，单位bytes -->
        <property name="maxUploadSize" value="100000"/>
    </bean>

</beans>